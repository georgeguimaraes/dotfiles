export LANG=en_US.UTF-8

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#   source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
# pm ls -fi

source ~/.antidote/antidote.zsh
antidote load ${ZDOTDIR:-$HOME}/.zsh_plugins.txt

export LS_COLORS="$(vivid generate tokyonight)"

autoload -U colors && colors
# zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
setopt combining_chars
setopt prompt_subst
setopt always_to_end
setopt auto_menu
setopt complete_in_word
setopt zle
setopt noflowcontrol
setopt no_case_glob
setopt correct
setopt LONG_LIST_JOBS
setopt login
setopt interactive
setopt interactive_comments

SAVEHIST=10000
HISTSIZE=5000
setopt EXTENDED_HISTORY          # Write the history file in the ':start:elapsed;command' format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
# setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire a duplicate event first when trimming history.
setopt HIST_IGNORE_DUPS          # Do not record an event that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete an old recorded event if a new event is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a previously found event.
setopt HIST_IGNORE_SPACE         # Do not record an event starting with a space.
setopt HIST_SAVE_NO_DUPS         # Do not write a duplicate event to the history file.
setopt HIST_VERIFY               # Do not execute immediately upon history expansion.
setopt APPEND_HISTORY            # append to history file
setopt HIST_NO_STORE             # Don't store history commands

cdpath=(. ~ ~/code)

export PATH=~/bin:/usr/local/sbin:/usr/local/bin:~/go/bin:$PATH
. $HOME/.asdf/asdf.sh
fpath=(${ASDF_DIR}/completions $fpath)

setopt auto_pushd 
setopt pushd_ignore_dups
setopt pushdminus

export PAGER="less"
export LESS="-R"
export EDITOR="nvim"

alias env="env | sort"
alias gpl='git pull'
alias gs='git status'
alias gd='git diff'
alias gci='git ci'
alias gco='git co'
alias gitconfig='nvim ~/.gitconfig'
alias sshconfig='nvim ~/.ssh/config'
alias zshconfig='nvim ~/.zshrc'
alias hosts='sudo nvim /etc/hosts'
alias grep="grep -i"
alias htop="sudo htop"
alias cp='cp -iv'                           # Preferred 'cp' implementation
alias mv='mv -iv'                           # Preferred 'mv' implementation
alias mkdir='mkdir -pv'                     # Preferred 'mkdir' implementation
alias bi='bundle install'
alias be='bundle exec'
alias vim="nvim"
alias json="fx"
alias nv="neovide --frame buttonless --multigrid"
alias v='nvim'
alias cz="chezmoi"

export DISABLE_SPRING=1
export ERL_AFLAGS="-kernel shell_history enabled"

bindkey $'^[[A' up-line-or-search    # up arrow
bindkey $'^[[B' down-line-or-search  # down arrow

# set Vim mode
# bindkey -v

# This speeds up pasting w/ autosuggest
# https://github.com/zsh-users/zsh-autosuggestions/issues/238
# pasteinit() {
#   OLD_SELF_INSERT=${${(s.:.)widgets[self-insert]}[2,3]}
#   zle -N self-insert url-quote-magic # I wonder if you'd need `.url-quote-magic`?
# }
# pastefinish() {
#   zle -N self-insert $OLD_SELF_INSERT
# }

zstyle :bracketed-paste-magic paste-init pasteinit
zstyle :bracketed-paste-magic paste-finish pastefinish

autoload -Uz compinit
if [ $(date +'%j') != $(/usr/bin/stat -f '%Sm' -t '%j' ${ZDOTDIR:-$HOME}/.zcompdump) ]; then
  compinit
else
  compinit -C
fi
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*'
zstyle ':completion:*' menu select

# Recommended for asdf-erlang
export CFLAGS="-O2 -g -fno-stack-check"
export KERL_CONFIGURE_OPTIONS="--without-megaco --disable-jit --without-javac --with-ssl=$(brew --prefix openssl@1.1)"

alias cat=bat

export FZF_DEFAULT_OPTS='
  --color=dark
  --color=fg:-1,bg:-1,hl:#5fff87,fg+:-1,bg+:-1,hl+:#ffaf5f
  --color=info:#af87ff,prompt:#5fff87,pointer:#ff87d7,marker:#ff87d7,spinner:#ff87d7
  --height 70% --layout=reverse --border'

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
zle     -N            fzf-cd-widget
bindkey -M emacs '\C-f' fzf-cd-widget
bindkey -M vicmd '\C-f' fzf-cd-widget
bindkey -M viins '\C-f' fzf-cd-widget
bindkey -rM emacs '\ec'
bindkey -rM vicmd '\ec'
bindkey -rM viins '\ec'


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

export MANPAGER="sh -c 'col -bx | bat -l man -p'"

eval "$(zoxide init zsh)"

exa_params=(
  '--git' '--icons' '--classify' '--group'
  '--group-directories-first' '--time-style=long-iso' '--color-scale'
)

alias ls='exa $exa_params'
alias l='exa --git-ignore $exa_params'
alias ll='exa --all --header --long $exa_params'
alias llm='exa --all --header --long --sort=modified $exa_params'
alias la='exa -lbhHigUmuSa'
alias lx='exa -lbhHigUmuSa@'
alias tree='exa --tree $exa_params'
alias lg='lazygit'

# export NEOVIDE_FRAME="buttonless"
export PATH="/usr/local/opt/libpq/bin:$PATH"
export RAILS_ENV=development

export PATH="$PATH:$HOME/.local/bin"

# tmux-window-name() {
# 	($TMUX_PLUGIN_MANAGER_PATH/tmux-window-name/scripts/rename_session_windows.py &)
# }
# add-zsh-hook chpwd tmux-window-name

# Function to check if a tmux server is running
function is_tmux_running() {
    tmux has-session 2>/dev/null
}

# Function to check if a tmux session has attached clients
function is_tmux_session_attached() {
    local session_list=$(tmux list-sessions 2>/dev/null)
    [[ -n $session_list ]]
}

# Function to reattach to an existing tmux session or create a new session
function tmux_reattach_or_create() {
    if is_tmux_running && ! is_tmux_session_attached; then
        tmux attach-session
    else
        tmux new-session
    fi
}

export RIPGREP_CONFIG_PATH=~/.config/ripgreprc

export NEOVIDE_FRAME="buttonless"
export NEOVIDE_MULTIGRID=1

export KERL_BUILD_DOCS=yes # So that our elixirls doesn't complain
