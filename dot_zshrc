export LANG=en_US.UTF-8

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#   source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
# pm ls -fi

source ~/.antidote/antidote.zsh
antidote load ${ZDOTDIR:-$HOME}/.zsh_plugins.txt

autoload -U colors && colors
setopt prompt_subst
setopt always_to_end
setopt auto_menu
setopt complete_in_word
setopt noflowcontrol
setopt no_case_glob
setopt correct
setopt LONG_LIST_JOBS
# setopt login
# setopt interactive
# setopt interactive_comments

SAVEHIST=10000
HISTSIZE=5000
setopt EXTENDED_HISTORY          # Write the history file in the ':start:elapsed;command' format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
# setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire a duplicate event first when trimming history.
setopt HIST_IGNORE_DUPS          # Do not record an event that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete an old recorded event if a new event is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a previously found event.
setopt HIST_IGNORE_SPACE         # Do not record an event starting with a space.
setopt HIST_SAVE_NO_DUPS         # Do not write a duplicate event to the history file.
setopt HIST_VERIFY               # Do not execute immediately upon history expansion.
setopt APPEND_HISTORY            # append to history file
setopt HIST_NO_STORE             # Don't store history commands
setopt auto_pushd 
setopt pushd_ignore_dups
setopt pushdminus

cdpath=(. ~ ~/code)
export PATH=~/bin:~/.local/bin:/usr/local/sbin:/usr/local/bin:~/go/bin:/Users/george/.cargo/bin:~/.luarocks/bin:$PATH
export PAGER="less"
export LESS="-R"
export EDITOR="nvim"
export LS_COLORS="$(vivid generate tokyonight-moon)"
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export RIPGREP_CONFIG_PATH=~/.config/ripgreprc
export NEOVIDE_FRAME="buttonless"
export NEOVIDE_MULTIGRID=1
export KERL_BUILD_DOCS=yes # So that our elixirls doesn't complain
export CFLAGS="-O2 -g -fno-stack-check"
export KERL_CONFIGURE_OPTIONS="--without-megaco --disable-jit --without-javac --with-ssl=$(brew --prefix openssl@1.1)"
export DISABLE_SPRING=1
export ERL_AFLAGS="-kernel shell_history enabled"
export FZF_DEFAULT_OPTS='
--color=dark
--color=fg:#c0caf5,bg:#24283b,hl:#ff9e64
--color=fg+:#c0caf5,bg+:#292e42,hl+:#ff9e64
--color=info:#7aa2f7,prompt:#7dcfff,pointer:#7dcfff
--color=marker:#9ece6a,spinner:#9ece6a,header:#9ece6a
--height=70% --layout=reverse --border'
eza_params=(
  '--git' '--icons' '--classify' '--group'
  '--group-directories-first' '--time-style=long-iso' '--color-scale=all'
)
FZF_DEFAULT_PREVIEW='[[ -d {} ]] && eza --tree --color=always {} || bat -n --color=always --line-range :500 {}'
export FZF_CTRL_T_OPTS="--preview '$FZF_DEFAULT_PREVIEW'"
export FZF_ALT_C_OPTS="--preview '$FZF_DEFAULT_PREVIEW'"
FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND --type=d"

alias env="env | sort"
alias g='git'
alias gpl='git pull'
alias gs='git status'
alias gd='git diff'
alias gci='git ci'
alias gco='git co'
alias gitconfig='nvim ~/.gitconfig'
alias sshconfig='nvim ~/.ssh/config'
alias zshconfig='nvim ~/.zshrc'
alias hosts='sudo nvim /etc/hosts'
alias grep="grep -i"
alias htop="sudo htop"
alias cp='cp -iv'                           # Preferred 'cp' implementation
alias mv='mv -iv'                           # Preferred 'mv' implementation
alias mkdir='mkdir -pv'                     # Preferred 'mkdir' implementation
alias bi='bundle install'
alias be='bundle exec'
alias vim="nvim"
alias json="fx"
alias nv="neovide --frame buttonless --multigrid"
alias v='nvim'
alias cz="chezmoi"
alias ls='eza $eza_params'
alias l='eza --git-ignore $eza_params'
alias ll='eza --all --header --long $eza_params'
alias llm='eza --all --header --long --sort=modified $eza_params'
alias la='eza -lbhHigUmuSa'
alias lx='eza -lbhHigUmuSa@'
alias tree='eza --tree $eza_params'
alias lg='lazygit'
alias gg='lazygit'
alias cat=bat
alias y=yazi
alias tailscale="/Applications/Tailscale.app/Contents/MacOS/Tailscale"
alias spelling-exceptions="nvim ~/.config/vale/george/spelling-exceptions.txt"
alias cd='z'
alias cdi='zi'

bindkey $'^[[A' up-line-or-search    # up arrow
bindkey $'^[[B' down-line-or-search  # down arrow

. $HOME/.asdf/asdf.sh
fpath=(${ASDF_DIR}/completions $fpath)

eval "$(fzf --zsh)"
source ~/.fzf/fzf-git.sh/fzf-git.sh

[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

if type brew &>/dev/null; then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
fi

source "$(brew --prefix)/share/google-cloud-sdk/path.zsh.inc"
source "$(brew --prefix)/share/google-cloud-sdk/completion.zsh.inc"

autoload -Uz compinit && compinit
eval "$(zoxide init zsh)"

# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --exclude .git . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type=d --hidden --exclude .git . "$1"
}

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
    export|unset) fzf --preview "eval 'echo \$'{}"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview $FZF_DEFAULT_PREVIEW "$@" ;;
  esac
}

# pnpm
export PNPM_HOME="/Users/george/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm endexport PATH="/opt/homebrew/opt/libpq/bin:$PATH"
#
export PGGSSENCMODE=disable
export DOCKER_HOST="unix://${HOME}/.colima/default/docker.sock"
alias gitanalyzed="bash ~/.gitanalyzed/gitanalyzed.sh"

if [ -f ~/.config/secrets.sh ]; then
  source ~/.config/secrets.sh
fi
